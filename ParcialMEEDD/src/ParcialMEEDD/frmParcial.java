/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ParcialMEEDD;

import java.io.File;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType1Font;

/**
 *
 * @author MARCO RENÉ ESQUIVEL JUÁREZ
 */
public class frmParcial extends javax.swing.JFrame {

    /**
     * Creates new form frmParcial
     */
    public ArrayList<Alumno> lAlumnos;
    DefaultTableModel mdlTabla;
    DefaultTableModel mdlTabla2;
    public boolean imp = false;

    public frmParcial() {
        initComponents();
        lAlumnos = new ArrayList<>();
        this.mdlTabla = (DefaultTableModel) this.jTable1.getModel();
        this.mdlTabla2 = (DefaultTableModel) this.jTable2.getModel();
    }

    private void cargarTabla() {
        this.mdlTabla.setRowCount(0);
        for (int i = 0; i < this.lAlumnos.size(); i++) {
            String[] registro = {
                this.lAlumnos.get(i).nombre,
                this.lAlumnos.get(i).carnet,
                this.lAlumnos.get(i).carrera,
                Integer.toString(this.lAlumnos.get(i).materiasCursadas),
                Double.toString(this.lAlumnos.get(i).CUM)
            };
            this.mdlTabla.addRow(registro);
        }
    }

    private void cargarTabla2() {
        this.mdlTabla2.setRowCount(0);
        int iAl = this.jTable1.getSelectedRow();
        int n = this.lAlumnos.get(iAl).lMat.size();

        for (int i = 0; i < n; i++) {
            String[] registro = {
                this.lAlumnos.get(iAl).lMat.get(i).nombreMateria,
                Double.toString(this.lAlumnos.get(iAl).lMat.get(i).periodo1),
                Double.toString(this.lAlumnos.get(iAl).lMat.get(i).periodo2),
                Double.toString(this.lAlumnos.get(iAl).lMat.get(i).periodo3),
                Double.toString(this.lAlumnos.get(iAl).lMat.get(i).promedio)
            };
            this.mdlTabla2.addRow(registro);
        }
    }

    private String espacios(Double d) {
        String x = "     ";
        if (d == 10.0) {
            x = "   ";
        }
        return x;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Parcial: SERVICIO DE REPORTERIA");

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("MANEJO DE ESTRUCTURAS DE DATOS");

        jButton1.setText("Importar datos de CSV");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(106, 249, 102));
        jButton2.setText("Exportar CSV");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(247, 87, 87));
        jButton3.setText("Exportar PDF");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(87, 126, 247));
        jButton4.setText("Exportar HTML");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Carnet", "Carrera", "Materias", "CUM"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "periodo 1", "periodo 2", "periodo 3", "promedio"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        File fArchivo = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        File selectedFile = null;
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
        }
        try {
            Scanner scan = new Scanner(new File(selectedFile.getAbsolutePath()));
            boolean mat = false;
            while (scan.hasNextLine()) {
                String sLinea = scan.nextLine();
                String[] etiquetaYDatos = sLinea.split(">");
                String[] Datos = etiquetaYDatos[1].split(",");

                switch (etiquetaYDatos[0]) {
                    case "<Alumno":
                        Alumno iAlum;
                        iAlum = new Alumno(Datos[0], Datos[1], Datos[2]);
                        this.lAlumnos.add(iAlum);
                        mat = false;
                        break;
                    case "<Materia":
                        Materia iMat;
                        iMat = new Materia(Datos[0], Double.parseDouble(Datos[1]), Double.parseDouble(Datos[2]), Double.parseDouble(Datos[3]));
                        int i = (lAlumnos.size() - 1);
                        if (mat==false) {
                            this.lAlumnos.get(i).lMat = new ArrayList<>();
                        }
                        this.lAlumnos.get(i).lMat.add(iMat);
                        this.lAlumnos.get(i).calc();
                        int j = (lAlumnos.get(i).lMat.size() - 1);
                        this.lAlumnos.get(i).lMat.get(j).redond();
                        mat= true;
                        break;
                    default:
                        JOptionPane.showMessageDialog(null, "ERROR");
                        break;
                }
            }
            JOptionPane.showMessageDialog(null, "Exitoso");
            this.cargarTabla();
            this.imp = true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        this.cargarTabla2();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (this.imp) {
            PrintWriter pw = null;
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
            int result = fileChooser.showOpenDialog(this);
            File selectedFile = null;
            if (result == JFileChooser.APPROVE_OPTION) {
                selectedFile = fileChooser.getSelectedFile();
                System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
            }
            try {
                pw = new PrintWriter(new File(selectedFile.getAbsolutePath()));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }

            StringBuilder strLinea = new StringBuilder();
            for (int i = 0; i < this.lAlumnos.size(); i++) {
                strLinea.append("<Alumno>" + this.lAlumnos.get(i).nombre + ","
                        + this.lAlumnos.get(i).carnet + ","
                        + this.lAlumnos.get(i).carrera + ","
                        + Integer.toString(this.lAlumnos.get(i).materiasCursadas) + ","
                        + Double.toString(this.lAlumnos.get(i).CUM) + "\n");

                for (int j = 0; j < this.lAlumnos.get(i).lMat.size(); j++) {
                    strLinea.append("<Materia>" + this.lAlumnos.get(i).lMat.get(j).nombreMateria + ","
                            + Double.toString(this.lAlumnos.get(i).lMat.get(j).periodo1) + ","
                            + Double.toString(this.lAlumnos.get(i).lMat.get(j).periodo2) + ","
                            + Double.toString(this.lAlumnos.get(i).lMat.get(j).periodo3) + ","
                            + Double.toString(this.lAlumnos.get(i).lMat.get(j).promedio) + "\n");
                }

            }
            pw.write(strLinea.toString());
            pw.close();
            JOptionPane.showMessageDialog(null, "Exitoso");
        } else {
            JOptionPane.showMessageDialog(null, "Aun no hay datos para exportar, importe el archivo CSV que se encuentra en la carpeta del programa");
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (this.imp) {
            String filename = "PDF_Datos.pdf";

            try {
                PDDocument doc = new PDDocument();

                for (int i = 0; i < this.lAlumnos.size(); i++) {
                    int OffY = 680;
                    PDPage page = new PDPage();
                    doc.addPage(page);
                    PDPageContentStream contents = new PDPageContentStream(doc, page);
                    contents.beginText();
                    contents.setFont(PDType1Font.COURIER_BOLD, 14);
                    contents.newLineAtOffset(80, 730);
                    contents.showText("Materias cursadas por el alumno: " + this.lAlumnos.get(i).nombre);
                    contents.endText();

                    contents.beginText();
                    contents.setFont(PDType1Font.COURIER_OBLIQUE, 11);
                    contents.newLineAtOffset(80, 710);
                    contents.showText("Carnet:" + this.lAlumnos.get(i).carnet
                            + "   " + this.lAlumnos.get(i).carrera
                            + "  Materias Cursadas:" + this.lAlumnos.get(i).materiasCursadas
                            + "  CUM:" + this.lAlumnos.get(i).CUM);
                    contents.endText();
                    for (int j = 0; j < this.lAlumnos.get(i).lMat.size(); j++) {
                        if (OffY < 50) {
                            contents.close();
                            page = new PDPage();
                            doc.addPage(page);
                            contents = new PDPageContentStream(doc, page);
                            contents.beginText();
                            contents.setFont(PDType1Font.COURIER_BOLD, 14);
                            contents.newLineAtOffset(80, 730);
                            contents.showText("Materias cursadas por el alumno: " + this.lAlumnos.get(i).nombre);
                            contents.endText();

                            contents.beginText();
                            contents.setFont(PDType1Font.COURIER_OBLIQUE, 11);
                            contents.newLineAtOffset(80, 710);
                            contents.showText("Carnet:" + this.lAlumnos.get(i).carnet
                                    + "   " + this.lAlumnos.get(i).carrera
                                    + "  Materias Cursadas:" + this.lAlumnos.get(i).materiasCursadas
                                    + "  CUM:" + this.lAlumnos.get(i).CUM);
                            contents.endText();
                            OffY = 680;

                        }
                        contents.beginText();
                        contents.setFont(PDType1Font.HELVETICA_BOLD, 12);
                        contents.newLineAtOffset(80, OffY);
                        contents.showText(this.lAlumnos.get(i).lMat.get(j).nombreMateria);
                        contents.endText();

                        contents.beginText();
                        contents.setFont(PDType1Font.HELVETICA_BOLD, 12);
                        contents.newLineAtOffset(280, OffY);
                        contents.showText(this.lAlumnos.get(i).lMat.get(j).periodo1
                                + espacios(this.lAlumnos.get(i).lMat.get(j).periodo1) + this.lAlumnos.get(i).lMat.get(j).periodo2
                                + espacios(this.lAlumnos.get(i).lMat.get(j).periodo2) + this.lAlumnos.get(i).lMat.get(j).periodo3
                                + espacios(this.lAlumnos.get(i).lMat.get(j).periodo3) + this.lAlumnos.get(i).lMat.get(j).promedio);
                        contents.endText();
                        OffY -= 20;
                    }
                    contents.close();
                }
                doc.save(filename);
                doc.close();
                JOptionPane.showMessageDialog(null, "Exitoso");
            } catch (Exception ee) {
                JOptionPane.showMessageDialog(null, ee.toString());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Aun no hay datos para exportar, importe el archivo CSV que se encuentra en la carpeta del programa");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (this.imp) {
            PrintWriter pw = null;
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
            int result = fileChooser.showOpenDialog(this);
            File selectedFile = null;
            if (result == JFileChooser.APPROVE_OPTION) {
                selectedFile = fileChooser.getSelectedFile();
                System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
            }
            try {
                pw = new PrintWriter(new File(selectedFile.getAbsolutePath()));
                StringBuilder strLinea = new StringBuilder();
                strLinea.append("<html><head><meta http-equiv='Content-Type' content='text/html; charset=utf-8'/></head><body><table border='2'>" + "\n");

                for (int i = 0; i < lAlumnos.size(); i++) {
                    strLinea.append("<tr>" + "\n");

                    strLinea.append("<td>");
                    strLinea.append("<b>Nombre:" + this.lAlumnos.get(i).nombre);
                    strLinea.append("</td>" + "\n");

                    strLinea.append("<td>");
                    strLinea.append("<b>Carnet:" + this.lAlumnos.get(i).carnet);
                    strLinea.append("</td>" + "\n");

                    strLinea.append("<td>");
                    strLinea.append("<b>Carrera:" + this.lAlumnos.get(i).carrera);
                    strLinea.append("</td>" + "\n");

                    strLinea.append("<td>");
                    strLinea.append("<b>Materias cursadas:" + Integer.toString(this.lAlumnos.get(i).materiasCursadas));
                    strLinea.append("</td>" + "\n");

                    strLinea.append("<td>");
                    strLinea.append("<b>CUM:" + Double.toString(this.lAlumnos.get(i).CUM));
                    strLinea.append("</td>" + "\n");

                    strLinea.append("</tr>" + "\n");
                    strLinea.append("<tr><td><b>Nombre Materia</td><td><b>Periodo 1.</td><td><b>Periodo 2.</td><td><b>Periodo 3.</td><td><b>Promedio.</td></tr>" + "\n");
                    for (int j = 0; j < lAlumnos.get(i).lMat.size(); j++) {
                        strLinea.append("<tr>" + "\n");

                        strLinea.append("<td>");
                        strLinea.append(this.lAlumnos.get(i).lMat.get(j).nombreMateria);
                        strLinea.append("</td>" + "\n");

                        strLinea.append("<td>");
                        strLinea.append(Double.toString(this.lAlumnos.get(i).lMat.get(j).periodo1));
                        strLinea.append("</td>" + "\n");

                        strLinea.append("<td>");
                        strLinea.append(Double.toString(this.lAlumnos.get(i).lMat.get(j).periodo2));
                        strLinea.append("</td>" + "\n");

                        strLinea.append("<td>");
                        strLinea.append(Double.toString(this.lAlumnos.get(i).lMat.get(j).periodo3));
                        strLinea.append("</td>" + "\n");

                        strLinea.append("<td>");
                        strLinea.append(Double.toString(this.lAlumnos.get(i).lMat.get(j).promedio));
                        strLinea.append("</td>" + "\n");

                        strLinea.append("</tr>" + "\n");
                    }
                }
                strLinea.append("</table></body></html>" + "\n");
                pw.write(strLinea.toString());
                pw.close();
                JOptionPane.showMessageDialog(null, "Exitoso");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Aun no hay datos para exportar, importe el archivo CSV que se encuentra en la carpeta del programa");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmParcial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmParcial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmParcial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmParcial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmParcial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
